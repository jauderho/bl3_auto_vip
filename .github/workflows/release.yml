name: Release
on: 
  push:
    tags:
      - v*
  workflow_dispatch:

env:
  GO_VERSION: 1.19.x

permissions: read-all

jobs:
  release:
    name: Release
    strategy:
      matrix:
        platform: [ubuntu-22.04]
    permissions:
      id-token: write
      contents: write
    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95 # v1
        with:
          egress-policy: audit
          disable-telemetry: false
          allowed-endpoints: >
            api.github.com:443
            api.honeycomb.io:443
            artifactcache.actions.githubusercontent.com:443
            frsnacprodeus2file1.blob.core.windows.net:443
            fulcio.sigstore.dev:443
            github.com:443
            golang.org:443
            goreleaser.com:443
            objects.githubusercontent.com:443
            pipelines.actions.githubusercontent.com:443
            raw.githubusercontent.com:443
            rekor.sigstore.dev:443
            storage.googleapis.com:443
            token.actions.githubusercontent.com:443
            toolbox-data.anchore.io:443
            uploads.github.com:443
            v1.fulcio.sigstore.dev:443

      - name: Honeycomb Buildevents
        uses: kvrhdn/gha-buildevents@b78f61a163d7027aba21a7c55761587e7dab38be # v1
        with:
          # Required: a Honeycomb API key - needed to send traces.
          apikey: ${{ secrets.BUILDEVENTS_APIKEY }}

          # Required: the Honeycomb dataset to send traces to.
          dataset: gha-buildevents-bl3auto

          # Required: the job status, this will be used in the post section and sent
          # as status of the trace. Must always be ${{ job.status }}.
          job-status: ${{ job.status }}

          # Optional: this should only be used in combination with matrix builds. Set
          # this to a value uniquely describing each matrix configuration.
          #matrix-key: ${{ matrix.platform }}

      - name: Set up Go
        uses: actions/setup-go@84cbf8094393cdc5fe1fe1671ff2647332956b1a # v2.1.5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2.4.0
        with:
          fetch-depth: 0

      # https://github.com/marketplace/actions/cache
      - name: Cache Go modules
        uses: actions/cache@661fd3eb7f2f20d8c7c84bc2b0509efd7a826628 # v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      - name: Cosign
        uses: sigstore/cosign-installer@b3413d484cc23cf8778c3d2aa361568d4eb54679 # v1.4.1
      
      - name: Generate SBOM
        uses: anchore/sbom-action/download-syft@b5042e9d19d8b32849779bfe17673ff84aec702d # v0.6.0

      # https://goreleaser.com/ci/actions/
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@5afacd2427634ace3f2f8a0418a526545c071ffe # v2
        #if: startsWith(github.ref, 'refs/tags/v')
        with:
          version: latest
          args: release -f .goreleaser.yml --rm-dist
        env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.HOMEBREW }}
          COSIGN_EXPERIMENTAL: 1
